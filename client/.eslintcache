[{"/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/index.js":"1","/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/reportWebVitals.js":"2","/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/App.js":"3","/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/components/landing.js":"4","/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/components/navbar.js":"5","/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/components/register.js":"6","/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/components/login.js":"7","/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/components/auth-service.js":"8","/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/components/protected-route.js":"9","/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/components/profile.js":"10"},{"size":547,"mtime":1608249421085,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1608249421085,"results":"13","hashOfConfig":"12"},{"size":1408,"mtime":1608254347920,"results":"14","hashOfConfig":"12"},{"size":1278,"mtime":1608249421085,"results":"15","hashOfConfig":"12"},{"size":793,"mtime":1608234914828,"results":"16","hashOfConfig":"12"},{"size":5417,"mtime":1608249410389,"results":"17","hashOfConfig":"12"},{"size":3055,"mtime":1608250602466,"results":"18","hashOfConfig":"12"},{"size":1592,"mtime":1608254520350,"results":"19","hashOfConfig":"12"},{"size":725,"mtime":1608254364884,"results":"20","hashOfConfig":"12"},{"size":150,"mtime":1608254293389,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"r6f8es",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/index.js",[],["44","45"],"/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/reportWebVitals.js",[],"/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/App.js",["46","47"],"/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/components/landing.js",[],"/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/components/navbar.js",[],"/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/components/register.js",["48","49","50","51","52"],"import React from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nexport default function Register() {\n  const requiredMsg = \"This field is required!!\";\n  const initialValues = {\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n\n  function handleSubmit(fields) {\n    console.log(fields);\n    alert(`submit registration data to backend: ${JSON.stringify(fields)}`);\n    const { firstName, lastName, email, password } = fields;\n    return;\n  }\n\n  return (\n    <>\n      <Card className=\"text-center\">\n        <Card.Body>\n          <Card.Header style={{ fontSize: \"32px\" }}>Register</Card.Header>\n          <Card.Subtitle\n            className=\"mb-2 text-muted\"\n            style={{ marginTop: \"10px\" }}\n          >\n            Begin learning today by creating an account and joining the Spaced\n            Flashcards community! Just give us some basic information...\n          </Card.Subtitle>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={Yup.object().shape({\n              firstName: Yup.string().required(requiredMsg),\n              lastName: Yup.string().required(requiredMsg),\n              email: Yup.string()\n                .email(\"Email is invalid!!\")\n                .required(requiredMsg),\n              password: Yup.string()\n                .min(6, \"Password must be at least 6 characters!!\")\n                .required(requiredMsg),\n              confirmPassword: Yup.string()\n                .oneOf([Yup.ref(\"password\"), null], \"Passwords don't match!!\")\n                .required(requiredMsg),\n            })}\n            onSubmit={(fields) => {\n              handleSubmit(fields);\n            }}\n            render={({ errors, touched }) => (\n              <Form>\n                <div className=\"form-group\">\n                  <label htmlFor=\"firstName\">First Name</label>\n                  <Field\n                    name=\"firstName\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.firstName && touched.firstName\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"firstName\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"lastName\">Last Name</label>\n                  <Field\n                    name=\"lastName\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.lastName && touched.lastName ? \" is-invalid\" : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"lastName\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Field\n                    name=\"email\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.email && touched.email ? \" is-invalid\" : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"email\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    className={\n                      \"form-control\" +\n                      (errors.password && touched.password ? \" is-invalid\" : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"confirmPassword\">Confirm Password</label>\n                  <Field\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    className={\n                      \"form-control\" +\n                      (errors.confirmPassword && touched.confirmPassword\n                        ? \" is-invalid\"\n                        : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"confirmPassword\"\n                    component=\"div\"\n                    className=\"invalid-feedback\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <button type=\"submit\" className=\"btn btn-primary mr-2\">\n                    Register\n                  </button>\n                  <button type=\"reset\" className=\"btn btn-secondary\">\n                    Reset\n                  </button>\n                </div>\n              </Form>\n            )}\n          />\n        </Card.Body>\n      </Card>\n    </>\n  );\n}\n","/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/components/login.js",["53","54","55","56","57"],"/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/components/auth-service.js",[],"/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/components/protected-route.js",[],"/home/marsupial/google_drive/Projects/spaced-flashcard-site/client/src/components/profile.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":16},{"ruleId":"62","severity":1,"message":"66","line":11,"column":10,"nodeType":"64","messageId":"65","endLine":11,"endColumn":21},{"ruleId":"62","severity":1,"message":"67","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":15},{"ruleId":"62","severity":1,"message":"68","line":20,"column":13,"nodeType":"64","messageId":"65","endLine":20,"endColumn":22},{"ruleId":"62","severity":1,"message":"69","line":20,"column":24,"nodeType":"64","messageId":"65","endLine":20,"endColumn":32},{"ruleId":"62","severity":1,"message":"70","line":20,"column":34,"nodeType":"64","messageId":"65","endLine":20,"endColumn":39},{"ruleId":"62","severity":1,"message":"71","line":20,"column":41,"nodeType":"64","messageId":"65","endLine":20,"endColumn":49},{"ruleId":"62","severity":1,"message":"67","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":15},{"ruleId":"62","severity":1,"message":"68","line":17,"column":13,"nodeType":"64","messageId":"65","endLine":17,"endColumn":22},{"ruleId":"62","severity":1,"message":"69","line":17,"column":24,"nodeType":"64","messageId":"65","endLine":17,"endColumn":32},{"ruleId":"62","severity":1,"message":"70","line":17,"column":34,"nodeType":"64","messageId":"65","endLine":17,"endColumn":39},{"ruleId":"62","severity":1,"message":"71","line":17,"column":41,"nodeType":"64","messageId":"65","endLine":17,"endColumn":49},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'authService' is defined but never used.","'toast' is defined but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]